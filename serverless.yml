service: promatch

provider:
  name: aws
  runtime: go1.x
  region: us-east-2

plugins:
  - serverless-go-build
  - serverless-offline
  - serverless-dotenv-plugin
useDotenv: true

package:
  individually: true

custom:
  promatchEnvironment:
    DBPASS: ${env:DBPASS}
    DBUSER: ${env:DBUSER}
  go-build:
    awsbuildPrefix: 'GOOS=linux GOARCH=amd64 CGO_ENABLED=0 '
    binPath: 'build'

functions:
  promatch-view-user:
    name: promatch-view-user
    handler: cmd/user/promatch-view-user/main.go
    events:
      - http:
          path: /users
          method: get
          cors: true
    environment: ${self:custom.promatchEnvironment}

  promatch-create-user:
    name: promatch-create-user
    handler: cmd/user/promatch-create-user/main.go
    events:
      - http:
          path: /users
          method: post
          cors: true
    environment: ${self:custom.promatchEnvironment}

  promatch-create-auth-token:
    name: promatch-create-auth-token
    handler: cmd/auth/promatch-create-auth-token/main.go
    events:
      - http:
          path: /auth
          method: post
          cors: true
    environment: ${self:custom.promatchEnvironment}

  promatch-delete-auth-token:
    name: promatch-delete-auth-token
    handler: cmd/auth/promatch-delete-auth-token/main.go
    events:
      - http:
          path: /auth
          method: delete
          cors: true
    environment: ${self:custom.promatchEnvironment}

  promatch-login-user:
    name: promatch-login-user
    handler: cmd/login/promatch-login-user/main.go
    events:
      - http:
          path: /login
          method: post
          cors: true
    environment: ${self:custom.promatchEnvironment}
